// Generated by CoffeeScript 1.3.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['models/AppModel', 'app', 'jqueryCookie'], function(AppModel, app) {
    app.models.User = (function(_super) {

      __extends(User, _super);

      function User() {
        this.getUserAttributes = __bind(this.getUserAttributes, this);

        this.initialize = __bind(this.initialize, this);
        return User.__super__.constructor.apply(this, arguments);
      }

      User.prototype.defaults = {
        access_token: null
      };

      User.prototype.initialize = function() {
        this.bind('change:access_token', this.getUserAttributes);
        return this.load();
      };

      User.prototype.authenticated = function() {
        return Boolean(this.get("access_token"));
      };

      User.prototype.save = function() {
        $.cookie('user_id', this.get('user_id'), {
          expires: .01
        });
        return $.cookie('access_token', this.get('access_token'), {
          expires: .01
        });
      };

      User.prototype.load = function() {
        return this.set({
          access_token: $.cookie('access_token'),
          user_id: $.cookie('user_id')
        });
      };

      User.prototype.getUserAttributes = function() {
        var access_token, endpoint, request;
        access_token = this.get('access_token');
        if (access_token !== null) {
          endpoint = '/api/v5/users/' + this.get('user_id');
          return request = $.get(endpoint, {
            access_token: access_token
          }, callback);
        } else {

        }
      };

      User.prototype.validation = {
        email: function(email) {
          var lcEmail, re;
          this.email = null;
          if (!email) {
            return 'Invalid Email!';
          }
          re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
          lcEmail = email.toLowerCase();
          if (!re.test(email)) {
            return "Invalid Email!";
          }
          if ((lcEmail.indexOf('brown.edu') < 0) && (lcEmail.indexOf('risd.edu') < 0)) {
            return 'Must use a Brown or RISD email';
          }
        },
        name: function(name) {
          if (!name) {
            return 'Required!';
          }
          if (name.length < 3) {
            return 'Too Short';
          }
        },
        password: function(pass) {
          if (!pass) {
            return 'Required!';
          }
          if (pass.length < 6) {
            return 'Must be more than 5 characters';
          }
        },
        password2: function(pass2) {
          if (!pass2) {
            return 'Required!';
          }
          if (this.get('password') !== pass2) {
            return "Doesn't Match";
          }
        },
        username: function(username) {
          if (!username) {
            return 'Required!';
          }
          if (username.length < 3) {
            return 'Too Short';
          }
        }
      };

      User.prototype.validateEmail = function(email) {
        var lcEmail, re;
        re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        lcEmail = email.toLowerCase();
        if (!re.test(email)) {
          return "Invalid Email!";
        }
        if ((lcEmail.indexOf('brown.edu') < 0) && (lcEmail.indexOf('risd.edu') < 0)) {
          return 'Must use a Brown or RISD email';
        }
        return true;
      };

      return User;

    })(AppModel);
    app.currentUser = new app.models.User();
    return app.models.User;
  });

}).call(this);
