// Generated by CoffeeScript 1.3.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["views/AppView", 'app', 'helpers', 'models/User'], function(AppView, app) {
    return app.views.Signup = (function(_super) {

      __extends(Signup, _super);

      function Signup() {
        this.submitEmail = __bind(this.submitEmail, this);

        this.setSignupStage = __bind(this.setSignupStage, this);
        return Signup.__super__.constructor.apply(this, arguments);
      }

      Signup.prototype.templateName = "signup1";

      Signup.prototype.initialize = function() {
        this.model = new app.models.User();
        return Backbone.Validation.bind(this);
      };

      Signup.prototype.events = {
        'keyup input[type!="submit"]': 'inputChanged',
        'click input[name="submitEmail"]': 'submitEmail',
        'click input[name="submitName"]': 'submitName'
      };

      Signup.prototype.inputChanged = function(evt) {
        var el, name;
        el = $(evt.currentTarget);
        name = el.attr('name');
        return this.model.set({
          email: el.val(),
          error: function() {
            return console.log('got error');
          }
        });
      };

      Signup.prototype.setSignupStage = function(signupNum) {
        return this.$el.html(app.getTemplate("signup" + signupNum));
      };

      Signup.prototype.submitEmail = function(evt) {
        console.log('in submitmeail');
        evt.preventDefault();
        if (this.model.isValid('email')) {
          return this.setSignupStage(2);
        }
      };

      Signup.prototype.submitName = function(evt) {
        evt.preventDefault();
        return this.setSignupStage(3);
      };

      Signup.prototype.signupFailed = function(req, status, err) {
        console.log(req, status, err);
        $('#signupText').html(makeTemplate('#signupFailed'));
        return $('#tryAgainBtn').click(function(e) {}, $('#signupText').html(makeTemplate('#signingUp')), registerUser());
      };

      Signup.prototype.registerUser = function() {
        return $.ajax({
          type: 'POST',
          url: '/register',
          data: {
            user: user.toJSON()
          },
          dataType: 'json',
          timeout: 2000,
          success: function(data) {
            if (data === 'success') {
              return $('#signupText').html(makeTemplate('#signupSucceeded'));
            } else {
              return signupFailed();
            }
          },
          error: function(req, status, err) {
            return signupFailed(req, status, err);
          }
        });
      };

      return Signup;

    })(AppView);
  });

}).call(this);
